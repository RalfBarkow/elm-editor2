
[section CaYaTeX Test Document]

By James Carlson and Nicholas Yang

%Notice the a leading percent sign makes a line into
a comment.

[italic CaYaTeX is a simple yet powerful markup
language that compiles to both LaTeX and Html.]

[italic The present document, written entirely in
CaYaTeX, lays out our design goals and demonstrates
some of the progress we have made towards specifiying
the language and implementing it in Elm. While our
work is incomplete, it is a start.]

[italic We are also working on an implementation
in Rust. This will, among other things, help us to
cross-validate the specification.]

The project is open source: [link
https://github.com/jxxcarlson/cayatex]

[section2 Design Goals]

The goals of the CaYaTeX project are for the language
to be

[list |numbered|
[item [strong Small], hence easy to learn. [italic To
this end there are just two constructs: ordinary text
and [code elements]].]

[item [strong Powerful]. We borrow ideas from
functional programming. Elements have a Lisp-like
syntax with brackets in place of parentheses. An
element has the form [code raw##[name |argument-list|
body]##] or simply [code raw##[name body]##] The
argument list is a comma-delimited sequence of strings.
The body is an element. The partial element [code name
args] is a function [code Element -> Element]. Such
functions can be composed, as in mathematics or as in
languages such as Haskell and Elm. ]


[item [strong Extensible]. [italic Via a macro
facility].]

[item [strong Multiple inputs and outputs.] Documents
written in CaYaTeX can be compiled to LaTeX, Markdown,
and HTML. Markdown documents can be compiled to
CaYaTeX.]

[item [strong Web-ready]. CaYaTeX has a differential
compiler that makes it suitable for real-time editing,
e.g., in a web app. ]

[item [strong Kind and Helpful]. Displays friendly and
informative error messages in real time in the rendered
text; has hooks for highlighting the corresponding
source text in a suitable IDE/editor.]

[item [strong Modern]. Unicode compatible.]]

[strong Note.] [fontRGB |50, 0, 200| At the moment
we have not yet implemented differential compilation,
which greatly speeds up compilation during editing.
All in due time!]

[section2 Mathematics]


Pythagoras says that [math a^2 + b^2 = c^2]. This is
an [strong [italic extremely]] cool result. But just
as cool is the below:

[mathdisplay \\sum_{n=1}^\\infty \\frac{1}{n} = \\infty,]

which goes back to the work of Nicole Oresme
(1320–1382). See the entry in the [link
|Stanford Encyclopedia of Philosophy|
https://plato.stanford.edu/entries/nicole-oresme/].
You can also consult [link
https://en.wikipedia.org/wiki/Nicole_Oresme].

We can also do some high-school math, with that
beautifully curved integral sign that attracts so many
people to the subject:

[mathdisplay \\int_0^1 x^n dx = \\frac{1}{n+1}]

And of course, we can also do theorems:

[theorem There are infinitely many primes [math p
\\equiv 1 \\text{ mod } 4.]]

[corollary |Euclid| There are infinitely many primes.]


[section2 Color]

Example: [highlightRGB |252, 178, 50| [fontRGB |23,
57, 156| [strong What color is this?]]]

[code raw###[highlightRGB |252, 178, 50| [fontRGB |23,
57, 156| [strong What color is this?]]]###]

Note the nesting of elements, aka function composition.
When we have our macro facility up and running, users
can abbreviate constructs like this one, e.g., just
say [code raw##[myhighlight| What color is this?]##]

[section2 SourceText]

One can design elements which manipulate data
(numerical computations, visualization). Here are some
data computations:

[sum 1.2, 2, 3.4, 4]

[average 1.2, 2, 3.4, 4]

[stdev |precision:3| 1.2, 2, 3.4, 4]

In the numerical examples, the precision of the result
has a default value of 2. This can be changed, as one
sees in the source of the third example, e.g., you
can have

[codeblock raw##[stdev | 1.2, 2, 3.4, 4]## ]

or

[codeblock raw##[stdev |precision:3| 1.2, 2, 3.4, 4]## ]

[section2 Graphs]

Below are three simple data visualizations. We plan
more, and more configurability of what you see here.

[section3 Bar graphs]

[bargraph |column:2, yShift: 0.2, caption: Global temperature anomaly 1880-1957|
1880,-0.12
1881,-0.07
1882,-0.07
1883,-0.15
1884,-0.21
1885,-0.22
1886,-0.21
1887,-0.25
1888,-0.15
1889,-0.10
1890,-0.33
1891,-0.25
1892,-0.30
1893,-0.31
1894,-0.28
1895,-0.22
1896,-0.09
1897,-0.12
1898,-0.26
1899,-0.12
1900,-0.07
1901,-0.14
1902,-0.25
1903,-0.34
1904,-0.42
1905,-0.29
1906,-0.22
1907,-0.37
1908,-0.44
1909,-0.43
1910,-0.38
1911,-0.43
1912,-0.33
1913,-0.31
1914,-0.14
1915,-0.07
1916,-0.29
1917,-0.31
1918,-0.20
1919,-0.20
1920,-0.21
1921,-0.14
1922,-0.22
1923,-0.21
1924,-0.24
1925,-0.14
1926,-0.06
1927,-0.14
1928,-0.17
1929,-0.29
1930,-0.09
1931,-0.07
1932,-0.11
1933,-0.24
1934,-0.10
1935,-0.14
1936,-0.11
1937,-0.01
1938,-0.02
1939,-0.01
1940,0.10
1941,0.19
1942,0.15
1943,0.16
1944,0.29
1945,0.17
1946,-0.01
1947,-0.05
1948,-0.06
1949,-0.06
1950,-0.17
1951,-0.01
1952,0.02
1953,0.09
1954,-0.12
1955,-0.14
1956,-0.20
1957,0.05
]

The bargraph code:

[codeblock raw##[bargraph |column:2,
    caption: Global temperature anomaly 1880-1957|
1880,-0.12
1881,-0.07
...]## ]

[section3 Line graphs]

[linegraph |caption: Global temperature anomaly 1880-1957|
1880,-0.12
1881,-0.07
1882,-0.07
1883,-0.15
1884,-0.21
1885,-0.22
1886,-0.21
1887,-0.25
1888,-0.15
1889,-0.10
1890,-0.33
1891,-0.25
1892,-0.30
1893,-0.31
1894,-0.28
1895,-0.22
1896,-0.09
1897,-0.12
1898,-0.26
1899,-0.12
1900,-0.07
1901,-0.14
1902,-0.25
1903,-0.34
1904,-0.42
1905,-0.29
1906,-0.22
1907,-0.37
1908,-0.44
1909,-0.43
1910,-0.38
1911,-0.43
1912,-0.33
1913,-0.31
1914,-0.14
1915,-0.07
1916,-0.29
1917,-0.31
1918,-0.20
1919,-0.20
1920,-0.21
1921,-0.14
1922,-0.22
1923,-0.21
1924,-0.24
1925,-0.14
1926,-0.06
1927,-0.14
1928,-0.17
1929,-0.29
1930,-0.09
1931,-0.07
1932,-0.11
1933,-0.24
1934,-0.10
1935,-0.14
1936,-0.11
1937,-0.01
1938,-0.02
1939,-0.01
1940,0.10
1941,0.19
1942,0.15
1943,0.16
1944,0.29
1945,0.17
1946,-0.01
1947,-0.05
1948,-0.06
1949,-0.06
1950,-0.17
1951,-0.01
1952,0.02
1953,0.09
1954,-0.12
1955,-0.14
1956,-0.20
1957,0.05
]

The linegraph code (CSV format):

[codeblock raw##[linegraph |caption: Global
temperature anomaly 1880-1957|
1880,-0.12
1881,-0.0]
##]

[section3 Scatter plots]

Use the same syntax as before, but with "scatterplot"
in place of "linegraph."

[codeblock raw##[scatterplot |col1:3,  col2:4
  , caption: Hubble's 1929 data| ...]##]

[scatterplot |col1:3,  col2:4, caption: Hubble's 1929 data|
object,ms,R (Mpc),v (km/sec),mt,Mt,"D from mt,Mt",,,,,,,,,
S.Mag.,..,0.032,170,1.5,-16.0,0.03,Slope when Intercept set to zero,423.901701290206,km/sec/Mpc,,,,,,
L.Mag.,..,0.03,290,0.5,-17.2,0.03,,,,,,,,,
N.G.C.6822,..,0.214,-130,9,-12.7,0.22,Slope,453.85999408475,km/sec/Mpc,,,,,,
598,..,0.263,-70,7,-15.1,0.26,Intercept,-40.4360087766413,km/sec,,,,,,
221,..,0.275,-185,8.8,-13.4,0.28,R Squared,0.623168376295362,,,,,,,
224,..,0.275,-220,5,-17.2,0.28,,,,,,,,,
5457,17,0.45,200,9.9,-13.3,0.44,,,,,,,,,
4736,17.3,0.5,290,8.4,-15.1,0.50,,,,,,,,,
5194,17.3,0.5,270,7.4,-16.1,0.50,,,,,,,,,
4449,17.8,0.63,200,9.5,-14.5,0.63,,,,,,,,,
4214,18.3,0.8,300,11.3,-13.2,0.79,,,,,,,,,
3031,18.5,0.9,-30,8.3,-16.4,0.87,,,,,,,,,
3627,18.5,0.9,650,9.1,-15.7,0.91,,,,,,,,,
4826,18.5,0.9,150,9,-15.7,0.87,,,,,,,,,
5236,18.5,0.9,500,10.4,-14.4,0.91,,,,,,,,,
1068,18.7,1,920,9.1,-15.9,1.00,,,,,,,,,
5055,19,1.1,450,9.6,-15.6,1.10,,,,,,,,,
7331,19,1.1,500,10.4,-14.8,1.10,,,,,,,,,
4258,19.5,1.4,500,8.7,-17.0,1.38,,,,,,,,,
4151,20,1.7,960,12,-14.2,1.74,,,,,,,,,
4382,..,2,500,10,-16.5,2.00,,,,,,,,,
4472,..,2,850,8.8,-17.7,2.00,,,,,,,,,
4486,..,2,800,9.7,-16.8,2.00,,,,,,,,,
4649,..,2,1090,9.5,-17.0,2.00,,,,,,,,,
Table 1,,,,,-15.5,,,,,,,,,,
]


[section2 Unicode]

You can freely use unicode characters, as in this
poetry element:

[poetry
А я иду, где ничего не надо,
Где самый милый спутник — только тень,
И веет ветер из глухого сада,
А под ногой могильная ступень.

— Анна Ахматова
]

[section2 Code]

Time for some code: [code raw##col :: Int -> Matrix
a -> [a]##]. Do you recognize the language (ha ha)?

We can also do code blocks. Syntax highlighting coming
later.

[codeblock raw##
# For Sudoku 3x3 subsquare function

col :: Int -> Matrix a -> [a]
col k = fmap ( !! k)

cols :: Matrix a -> Matrix a
cols m =
    fmap (\\k -> col k m) [0..n]
       where n = length m - 1
##]


[italic [highlight Note the use of Rust-like raw
strings in the source text to avoid escaping all the
brackets.]]



[section2 Images]

[image |caption: Rotkehlchen
aufgeplustert, width: 200, placement:
center|https://i.pinimg.com/originals/d4/07/a4/d407a45bcf3ade18468ac7ba633244b9.jpg]

[code raw##[image |caption: Rotkehlchen aufgeplustert, width: 200, placement: center| https://..jpg]##]

[section2 Lists]

Note that lists can be nested and can be given a title
if desired. The symbol for "bulleted" lists is • by
default, but can be specified by the user.

A numbered list has "numbered" as its first argument,
as in the example below.

[list |numbered, title:Errands and other stuff|

    [item Bread, milk, O-juice]

    [item Sand paper, white paint]

    [list |none|

        [item A]

        [item B]

        [list |§, title:Greek symbols|

            [item [math \\alpha = 0.123]]

            [item  [math \\beta = 4.567]]

]]]


[section2 Appendix: Technical Stuff]

Because CaYaTeX is so simple, the type of the AST is
very small:

[codeblock

raw##type Element
    = Text String (Maybe SourceMap)
    | Element
        String
        (List String)
        Element (Maybe SourceMap)
    | LX (List Element) (Maybe SourceMap)
##
]


